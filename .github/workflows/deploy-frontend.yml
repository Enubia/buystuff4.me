name: Run build and deploy

on: [ workflow_dispatch ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: "production"
      MONGO_URL: ${{ secrets.MONGO_URL }}
      USER: ${{ secrets.USER }}
      PASSWORD: ${{ secrets.PASSWORD }}
      API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install modules
        run: cd frontend && npm install

      - name: Build project
        run: cd frontend && npm run generate

      - name: Build, Push and Release Frontend
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_FRONTEND }}
          dockerfile_directory: ./frontend
          dockerfile_name: dockerfile
          docker_options: "--no-cache"
          process_type: web
